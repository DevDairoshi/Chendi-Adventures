<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAAAd0SU1FB+QDBhcUFXnQUHMAAAFfSURBVFhH7ZZBqoRADAVn4caF4Ak8gve/nUM1
        lLzuGT8ygb9y8UhMUvFNy4ivbduOK+37/rV+V3f417quR2qe52OapiYWEKkty9L1rFf5FwlN4IzUWWDu
        gryRCyt8M5ADLmXIBShvoLiu8p0Biy5hATl1l+cNmK3yzQAXyEVEBllgzRnynKny5wlkE+UCl19F81/4
        81+QS6x5hNmzn3X0K//ne+A/1AykQ3KUefZ0j6hV+Q8D2aTutbmzRFTlmwELQOQqh7MnTF7luxNQ6dRf
        gOzbI1b57gQEHc5B41ir8s0AwAglMEI+X2KVPw2MzygHkTfIGVTlm4Er8SL5Vr+rO/zzPfB8DzzfA8/3
        QDOQDslR5tnTPaJW5T8MZJO61+bOElGVbwYsAJGrHM6eMHmV705ApVN/AbJvj1jluxMQdDgHjWOtyjcD
        ACOUwAj5fIlV/jQwPqMcRN4gZ1CNn443ExGovQflIscAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQxsAAAOaAAHEGIAABBlAAAObAASDm8ADBRhAAMUZAAXEmUAABRlAAESbAABFWMAABRnAAAT
        awAKFmAADBZgAAATbgAJF18ADxVkAAIWZgACGV0ABxhhAAUYYgADGWIADRdnAAAXbAAAF24ABBhsAAAZ
        awAAGHAAAIqVAAp6zwAwft0ACKPkAADZ6gAc1v4AB9j/AALb+wAQ2f8AANv9AA7a/wAF2/8ABNz/AAXd
        /AAY4O4ACtz/AA3c/wAJ3vsAFtz+AADe/wAQ3f4AA97/AATe/wAI3v4AAN/9AAXe/wAH3v8ACN7/AADf
        /gAC3/4AAN//AA/f+wAB3/8AA9//AAnf/gAM4/EAAOD+AATg/QAF4P0AAeH7AALg/gAB4P8ABeD+AAjh
        +gAE4vgAAuL6AADh/gAA4f8AAOL8AADj+gAA4v4AAuL/AA7l/gAP7f8AZPP/AP77/wD2/P8A/vz/APv9
        /gDp//8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAgICAgICAgICAgIC
        AgcAAAICAgICAAAAAAAAAAAAAAIvLy8vLy8vLwUSJS85GAAAAicuLwIAAAAAAAAAAAAAAj09Pz0/Pz0/
        Dg89PUMMAAACKzVIAgAAAAAAAAAAAAACSEhATVFRUVERFThIRwgAAAI7RUgCAAAAAAAAAAAAAAJISDYC
        AgICAgIVOEg8CgMEAjtESAIAAAAAAAAAAAAAAkhINgJUVFRUVBU4SEcLICACO0RIAgAAAAAAAAAAAB8C
        SEhKAh9UVFRUFThIQSEpLCIyUEgCAAAAAAAAAB8fVAJISEoCIyMjVFQVOEhNKlJGKE80SAIAAAAAAAAf
        VFRUAkhISgJVVVUjIxU4SEhITSY6SEhIAgAAAAAAAB9UVB8CPjdMAlRUVFRUEDAtTjUzAlNCMT0CAAAA
        AAAfVFQfIwJYS0wCVFRUVFQXVlpJJBlVAllXMgIAAAAAAB9UHyNVAgkdGgJUVFRUVBYNExsGVFUAHBQe
        AgAAAAAAH1QfI1VUHx8fVB8fVB8fVFRUI1RUVQAAAAAAAAAAAB9UHyNVVB8jIyMfIyMfIyMfVFQjVFRU
        VQAAAAAAAAAAH1QfI1VUVB8jVSNVVSNVVSNVVFQjVFRVAAAAAAAAAAAfVB8jVVRUHyNVI1UfI1UfI1VU
        VCNUVFUAAAAAAAAAAB9UHyNVVB8fI1UjVR8jVR8jVVQfI1RUVQAAAAAAAAAAH1RUI1UfIx8jVSNVHyNV
        HyNVVB8jVFRVAAAAAAAAAAAfVFQjVVQfIyNVI1UfI1UfI1UfI1VUVFUAAAAAAAAAAABUVFQjVVRVI1VV
        IyNVIyNVVB8jVVRVAAAAAAAAAAAAAFRUVCNVVFRVVFRVVVRVVVRUHyNVVFUAAAAAAAAAAAAAVFRUVCNU
        VFRUVFRUVFRUVB8jVVRUVQAAAAAAAAAAAAAAVFRUVCNUVFRUVFRUVB8fI1VUVFUAAAAAAAAAAAAAAAAA
        VFRUVCMjHx8fHx8fIyNVVFRVAAAAAAAAAAAAAAAAAABUVFRUVFQjIyMjIyNVVVRUVFUAAAAAAAAAAAAA
        AAAAAAAAVFRUVFRUVVVVVVRUVFVVAAAAAAAAAAAAAAAAAAAAAAAAVFRUVFRUVFRUVVVVAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABVVVVVVVUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//////gADB/4AAwf+AAMH/gADB/4AAAf8AAAH8AAAB+AAAAfAAAAHwAAAB4AAAAeAA
        AAHgAAAfwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAP4AAAH+AAAB/gAAAf8AAAP/gAAH/4AAB//AAA//8A
        Af//gAf///A/////////////
</value>
  </data>
</root>